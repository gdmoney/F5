Defaults
========
Mgmt: 192.168.1.245
CLI:  root/default (19,200)
GUI:  admin/admin



Initial Config
==============
1. Mgmt port				via: console, SSH/GUI, or LCD panel
2. License				obtain a reg key, obtain a dossier (contains HW info), activate license @ activate.f5.com
3. Provision				allocate resources to licensed modules (Nominal*, Minimum, Dedicated)
4. Install device cert			self-signed or CA signed, must be valid		
5. Configure platform			mgmt IP, hostname, time zone, root/admin accounts, SSH access
6. Configure network and HA		interfaces, VLANs, Self-IPs
7. Configure NTP and DNS		System > Configuration > Device



System
======
- TMM					- Traffic Mgmt Microkernel (Data Plane)
- TMOS					- Traffic Management OS

- Linux shell				- advanced CLI shell |     ~ #
- tmsh (TMOS shell)			- CLI shell          | (tmos)#

- MGMT interface			- processes only administrative traffic			- controlled by Linux
- TMM switch interface			- processes both application and administrative traffic	- controlled by TMOS

- Interface Mirroring			- duplicates traffic from one or more interfaces to another
- Port Lockdown				- specifies the protocols and services from which this self IP can accept traffic (All, None, Default, Custom)

- Common partition objects are accessible by all users



Logging & Config Files
======================
- recommended to use HSL and store logs on a pool of remote servers

- types of logging events:
  - System				- based on Linux events, not specific to BIG-IP	    	/var/log/messages
  - Packet filter			- result from packet filters and packet-filter rules  	/var/log/pktfilter
  - Local traffic			- LTM system events 				    	/var/log/ltm
  - Audit				- logs resulting from config changes; optional 	    	/var/log/audit

 /var/log/...				- logs directory (ltm, gtm, tmm, audit, user, snmpd)
 /var/core				- contains contents of the system memory at the time a crash occurred

 /config/bigip.conf			- all configuration objects for managing local application traffic
 /config/bigip_base.conf		- network components; mgmt int (not sync'd)
 /config/bigip_user.conf		- user accounts and passwords
 /config/bigip.license			- license info	
 /config/bigip_script.conf		- iApps, iCall templates and scripts
 /config/profile_base.conf		- default profiles

 /var/local/ucs				- compressed config archive (User Configuration Set), includes licenses
 /var/tmp				- QKView files for use on ihealth.f5.com

 /shared/tmp				- should be used for storing UCS archives, QKView files, tcpdump files
 /shared/log/eud.log			- EUD report log; used by support



TCP/IP
======
- default deny system			- will not process traffic unless explicitly configured to listen to specific traffic

- Full-Proxy Architecture				
  - intermediates connectivity between clients and servers
  - eliminates the need for clients and servers to negotiate the lowest common denominator for communications
  - improves performance while masking inefficiencies in the network

- TCP Express				
  - F5s optimized TCP/IP stack
  - maintains separate MSS for clients and servers
  - TCP Selective ACKs or TCP Timestamps
  - automatically optimizes TCP window sizes and TCP congestion information for clients and servers



SNAT
====
- changes the source IP address so that the server's response goes back thru the LTM and not the server's default gateway
- Auto Map uses the self floating IP address by default
- unlike NATs, connections can not be initiated to a SNAT address => more secure
- each SNAT IP address is limited to 65,535 connections

- Auto Map				- source IP changed to floating Self IP address(es) on egress VLANs
- SNAT pool				- source IP changed to a pool IP addresses on egress VLANs
					- can contain addresses from multiple egress networks



Configuration Objects
=====================
- Nodes					- server's IP address
- Pool Member				- IP address:port #
- Pools					- group of pool members
- Virtual Servers			- client traffic listener
- Profiles				- modify traffic behavior
- iRules

- administrative states of Nodes and Pool Members:
  - Enabled				- processes ALL connections
  - Disabled				- processes ESTABLISHED and PERSISTENT connections
  - Forced Offline			- processes ESTABLISHED connections

- administrative states of Virtual Servers:
  - Enabled
  - Disabled



Virtual Server
==============
- traffic management object represented by a VIP and a service
- requires a TCP or UDP profile, L7 profiles are optional
- Connection Mirroring 			- replicates connection info to the standby unit; disabled by default
					- provides higher reliability but may degrade performance
  					- useful for long-term connections like FTP, Telnet; not for HTTP or UDP

- types:				Standard *, Forwarding, Performance (HTTP or L4), Stateless, Reject, DHCP, Internal

- order of preference:

  Source		Destination		Port
  ------		-----------		----
  host			host			port
  host			host			*
  network		host			port
  network		host			*
  *			host			port
  *			host			*

  host			network			port
  host			network			*
  network		network			port
  network		network			*
  *			network			port
  *			network			*

  host			*			port
  host			*			*
  network		*			port
  network		*			*
  *			*			port
  *			*			*



Load Balancing Algorithms
========================
- primary mechanism that determines how connections are distributed

- Static:				Round Robin *, Ratio (member or node) - useful when server capacity is non-homogeneous
- Dynamic:				Least Connections *, Weighted LC, Fastest (L7 requests), Observed (dynamic ratio), Predictive (dynamic ratio), Dynamic Ratio, Least Sessions

- Priority Group			- members in the lower priority group are idle until higher priority group fails
- Priority Group Activation		- based on the configured # of required minimum pool members in the higher priority group

- Fallback Host				- activated when all members in a pool are available; for HTTP only



Monitors
========
- checks the status of a particular protocol, service, or application
- can be assigned to: Pools, Pool Members or Nodes
- if Interval = n seconds, Timeout = (n x 3) + 1

- categories:
  - Health				- checks the availability of resources
  - Performance				- checks performance of and load on resources

- types:
  - Address check			- simple up/down verification (ICMP)
  - Service check			- L4 port monitor (TCP)
  - Content check			- issues a request and compares response with expected content (HTTP/S)
  - Application check			- interacts with application on multiple levels (FTP)
  - Path check				- determines if traffic can flow thru a device to an endpoint
  - External				- monitor services using another application
  - Passive (Inband)			- checks the health of a pool member based on a specified # of connection attempts

- availability states of Virtual Servers, Pools, Pool Members, Nodes, iRules:

  - GREEN				- Available				new connections sent
  - RED					- Offline				new connections NOT sent
  - BLUE				- Unknown				new connections sent
  - YELLOW				- Unavailable				new connections NOT sent

  - BLACK circle			- Disabled				only Established connections sent
  - BLACK diamond			- Forced Offline			only Persistent  connections sent



Profiles
========
- configuration tools to modify and control traffic behavior
- define capabilities and actions for the virtual server
- tells a virtual server how to process packets it receives based on the profile's parameters
- TCP is the default VS profile; L7 profiles are optional
- HTTP profile places the LTM in full L7 inspection mode, which may be unnecessary with simple virtual servers

- types:				
  - Services				- layer 7 oriented; support special features for applications
    - HTTP Compression			  - uses either gzip or deflate compression methods
    - Web Acceleration			  - caching - LTM stores HTTP objects in memory to reduce load on back-end servers
					  - 3 types: webacceleration, optimized-acceleration, optimized-caching
					  - useful for: high-demand objects, static content, content compression
  - Persistence				- session oriented; methods to treat multiple TCP connections as one
  - Protocol				- layer 4 oriented; parameters concerning timeouts & connection mgmt
    - Fast HTTP				  - faster than HTTP profile under optimal network conditions; limited features
    - Fast L4				  - accelerates packet processing; limited to socket level decisions
  - SSL					- support decryption on the client side and encryption on the server side
  - Authentication			- methods for validating clients wishing to gain access to pool members
  - OneConnect				- reduces the # concurrent TCP connections to servers by reusing existing ones
  - Analytics				- logs and analyzes web application performance

- TCP + HTTP				- full advantage of L4-7 features; CPU and memory intensive



Persistence Profiles
====================
- important that the user continues to be connected the same application instance
- Persistence Records are used to ID clients and are stored in the persistence table (except for cookie persistence)
- Persistence Mirroring			- if the active unit goes into the standby mode, the system mirrors any persistence records to its peer
					- should be enabled in most situations except for cookie persistence

- types:
  - Source address *			- based on the source IP addr (HTTP/S)
  - Cookie *				- HTTP only
    - Insert mode			  - BIG-IP inserts a cookie in HTTP response
    - Rewrite mode			  - web server creates a cookie and BIG-IP rewrites it
    - Passive mode			  - web server creates a cookie and BIG-IP passively lets it through
  - destination address affinity	- based on the destination IP address
  - SSL					- based on the SSL session ID, not impacted by proxies and NATs
  - SIP					- based on call-ID
  - Universal *				- based on custom defined persistence criteria, e.g. URI



SSL Process
===========
- in a TLS handshake, client and server exchange several messages that result in an encrypted channel for secure communication
- client always authenticates the server's identity; the server is not required to authenticate the client's identity
- server shares its certificate including it's public key with the client
- the client sends a random string of date to the server encrypted with the server's public key
- client and server independently calculate the symmetric key that will be used for the duration of the TLS session

- certificate verification process checks: 
  - Digital Signature			- clients signs a handshake message using it's private key
					- server validates the message digest of the DS using the client's public key
  - Certificat Chain			- server maintains a list of trusted CAs which determines which certs it will accept
					- server will use a CA's public key to validate the CA's digital signature on a cert
  - Expiration Date & Validity Period	- server compares the current date to the validity period listed in the cert
  - Cert Revocation Status		- server compares the client cert to the list of revoked certs on the system



Local Traffic Policies
======================
- another mechanism for customizing application delivery thru the LTM
- similar to iRules but not as computationally expensive
- recommened to use Profiles and Local Traffic Policies over iRules
- Profiles > Local Traffic Policy > iRules



iRules
======
- Tcl based scripting language for event-driven customized traffic manipulation
- extend BIG-IP feature set:		inspect, analyze, modify, route, redirect, discard, manipulate, replay
- triggered by traffic processing activities (CLIENT_ACCEPTED, CLIENT_DATA, SERVER_CONNECTED, etc.)
- trades functionality for performance, use only when you have to
- otherwise use Profiles and Local Traffic Policies

- iFiles				- store data/content files and external class-lists for use by iRules
- iStats				- iRules variables accessible in tmsh; primary vehicle for info sharing b/w control & data planes

- components:
  - Name
  - Event
  - Condition
  - Action

- constructs:
  - Operators				Logical and Relational: == , > , < , starts_with , contains , ends_with
  - Functions				findstr , getfield , substr
  - Statements				if , switch , log , pool
  - Commands				HTTP::uri , HTTP::header , AES::encrypt , SIP::call_id

- syntax:
  - event declaration, event name	when CLIENT_ACCEPTED
  - Conditiional Logic statement	    if IP_addr starts_with 10.x.x.x
					        pool TEN_POOL				(commands when condition is true)
					    else
					        pool CUSTOMER_POOL			(commands when condition is false)



HA
==
- CMI					- Centralized Management Infrastructure (formerly DSC)
- Active-Active or Active-Standby*
- use a dedicated failover VLAN
- network failover is recommended over failover cable (50 ft limit)
- for Active-Standby use a failover cable in conjunction with network failover
- floating self-IPs are hosted by the active device

- Device Trust				- established by mutual exchange of certs and keys b/w devices that will be placed in Device Groups
- Device Groups				- up to 8 devices that trust each other and can sync config data and fail over to one another
  - Sync-Failover			- recommended
  - Sync-only
- Traffic Group				- collection of configuration objects monitored for failover
					- devices must have same config data: virtual servers, pools, monitors, profiles, etc
					- active on only one device
- ConfigSync				- process of syncronizing config data b/w/ devices in a Device Group
					- Active to Standby or Standby to Active

- Stateful Failover			- current connections and persistence maintained	
					- accomplished by mirroring data to Standby
  - Connection Mirroring		- applicable to long lasting connections only (Telnet, FTP, SSH)
  - Persistence Mirroring		- for persistent sessions

- MAC Masquerading			- used virtual MAC addresses for each VLAN interface
					- no need to change ARP tables on network devices
					- configure the same MAC address on both devices

- individual settings:			hostnames, Unit IDs, Self IPs

- HA setup prerequisites:		mgmt int's configured, same modules licenses/provisioned, valid certs, hostnames in FQDN format, 
					clocks sync'd, VLANs/Self-IPs configured, matching admin user/pswd, backup both devices (not required but recommended)



iHealth
=======
- ihealth.f5.com
- online diagnostic site/tool for proactive maintenance and troubleshooting
- analyzes uploaded QKView files for HW/SW issues and vulnerabilities and generates reports
- in a HA pair, create QKViews on both devices
- can be used to compare configuration changes/differences
- automatically gathers 5MB of log files
- Menu: Status, Config Explorer, Commands, Graphs, Diagnostics, Upgrade Advisor, Files, iApps, Log Search, Security, Bug Tracker



End User Diagnostics
====================
- set of hardware diagnostic tests run using a console connection
- recommended to download and install the latest version of EUD before running system diagnostics
- do not run on a production system; prevents traffic processing
- usually run with F5 support
- can be run by booting from ISO on a USB drive or disk or Indexed Mesh (IM) file from BIG-IP or a USB drive
- tests: system, sensors, SFPs, I2C, PCIe, ECC, internal packet path, SSL, compression, SMART, RAM, PS, fan, FIPS, LED, LCD



BIG-IQ
======
- centralized management & monitoring of up to 600 devices (LTM, ASM, AWAF, APM, FPS)
- objects can be configured once and pushed out to many BIG-IPs
- evaluates current and saved BIG-IP state before deploying config changes (diff)

- BIG-IQ CM  (Centralized Management)
- BIG-IQ DCD (Data Collection Device) - manages and stores alerts, events, statistical data from the managed BIG-IP devices

- tabs:					Monitoring, Configuration, Deployment, Devices, System, Applications



Analytics (AVR)
===============
- BIG-IP module for analyzing web application performance
- Metrics: 				Server Latency, Page Load Time, Thruput, User Sessions
- Entities:				URLs, Countries, Client IP Addresses, Response Codes, User Agents, Methods
- for apps, virtual servers, pool members, URLs
- also provides remote logging and notification capabilities
- create an Analytics profile with Virtual Servers or with an iApps application
- virtual server must have an HTTP profile applied
